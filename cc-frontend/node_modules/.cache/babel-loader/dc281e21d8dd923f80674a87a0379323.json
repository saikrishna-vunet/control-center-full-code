{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"/home/sakthi/vunet/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@mui/icons-material/Home';\nimport MonitorIcon from '@mui/icons-material/Monitor';\nimport SourceIcon from '@mui/icons-material/Source';\nimport MiscellaneousServicesIcon from '@mui/icons-material/MiscellaneousServices';\nimport DesignServicesIcon from '@mui/icons-material/DesignServices';\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\nimport BackupIcon from '@mui/icons-material/Backup';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst drawerWidth = 200;\n\nconst openedMixin = theme => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: 'hidden'\n});\n\nconst closedMixin = theme => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(8)} + 1px)`\n  }\n});\n\nconst DrawerHeader = styled('div')(({\n  theme\n}) => Object.assign({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1)\n}, theme.mixins.toolbar));\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => Object.assign({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}, open && {\n  marginLeft: drawerWidth,\n  width: `calc(100% - ${drawerWidth}px)`,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}));\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => Object.assign({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: 'nowrap',\n  boxSizing: 'border-box'\n}, open && Object.assign({}, openedMixin(theme), {\n  '& .MuiDrawer-paper': openedMixin(theme)\n}), !open && Object.assign({}, closedMixin(theme), {\n  '& .MuiDrawer-paper': closedMixin(theme)\n})));\nconst HtmlTooltip = styled(_ref => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return _jsx(Tooltip, Object.assign({}, props, {\n    classes: {\n      popper: className\n    }\n  }));\n})(({\n  theme\n}) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    width: 170,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n    placement: 'right'\n  }\n}));\nexport default function MiniDrawer() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return _jsxs(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [_jsx(CssBaseline, {}), _jsx(AppBar, {\n      position: \"fixed\",\n      open: open,\n      children: _jsxs(Toolbar, {\n        children: [_jsx(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          sx: Object.assign({\n            marginRight: 5\n          }, open && {\n            display: 'none'\n          }),\n          children: _jsx(MenuIcon, {})\n        }), _jsx(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          children: \"Control Center\"\n        })]\n      })\n    }), _jsxs(Drawer, {\n      variant: \"permanent\",\n      open: open,\n      children: [_jsx(DrawerHeader, {\n        children: _jsx(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? _jsx(ChevronRightIcon, {}) : _jsx(ChevronLeftIcon, {})\n        })\n      }), _jsx(Divider, {}), _jsxs(List, {\n        children: [_jsx(Link, {\n          to: \"/app/controlcenter\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(Tooltip, {\n            title: \"Home\",\n            placement: \"right-start\",\n            sx: {\n              minHeight: 10\n            },\n            children: _jsx(ListItem, {\n              disablePadding: true,\n              sx: {\n                display: 'block'\n              },\n              children: _jsxs(ListItemButton, {\n                sx: {\n                  minHeight: 48,\n                  justifyContent: open ? 'initial' : 'center',\n                  px: 2.5\n                },\n                children: [_jsx(ListItemIcon, {\n                  sx: {\n                    minWidth: 0,\n                    mr: open ? 3 : 'auto',\n                    justifyContent: 'center'\n                  },\n                  children: _jsx(HomeIcon, {})\n                }), _jsx(ListItemText, {\n                  primary: \"Home\",\n                  sx: {\n                    opacity: open ? 1 : 0\n                  }\n                })]\n              })\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/app/controlcenter/Hosts\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'block'\n            },\n            children: _jsxs(ListItemButton, {\n              sx: {\n                minHeight: 48,\n                justifyContent: open ? 'initial' : 'center',\n                px: 2.5\n              },\n              children: [_jsx(ListItemIcon, {\n                sx: {\n                  minWidth: 0,\n                  mr: open ? 3 : 'auto',\n                  justifyContent: 'center'\n                },\n                children: _jsx(SourceIcon, {})\n              }), _jsx(ListItemText, {\n                primary: \"Hosts\",\n                sx: {\n                  opacity: open ? 1 : 0\n                }\n              })]\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/app/controlcenter/Monitor\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'block'\n            },\n            children: _jsxs(ListItemButton, {\n              sx: {\n                minHeight: 48,\n                justifyContent: open ? 'initial' : 'center',\n                px: 2.5\n              },\n              children: [_jsx(ListItemIcon, {\n                sx: {\n                  minWidth: 0,\n                  mr: open ? 3 : 'auto',\n                  justifyContent: 'center'\n                },\n                children: _jsx(MonitorIcon, {})\n              }), _jsx(ListItemText, {\n                primary: \"Monitor\",\n                sx: {\n                  opacity: open ? 1 : 0\n                }\n              })]\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/app/controlcenter/Services\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'block'\n            },\n            children: _jsxs(ListItemButton, {\n              sx: {\n                minHeight: 48,\n                justifyContent: open ? 'initial' : 'center',\n                px: 2.5\n              },\n              children: [_jsx(ListItemIcon, {\n                sx: {\n                  minWidth: 0,\n                  mr: open ? 3 : 'auto',\n                  justifyContent: 'center'\n                },\n                children: _jsx(MiscellaneousServicesIcon, {})\n              }), _jsx(ListItemText, {\n                primary: \"Services\",\n                sx: {\n                  opacity: open ? 1 : 0\n                }\n              })]\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/app/controlcenter/Setupwizard\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'block'\n            },\n            children: _jsxs(ListItemButton, {\n              sx: {\n                minHeight: 48,\n                justifyContent: open ? 'initial' : 'center',\n                px: 2.5\n              },\n              children: [_jsx(ListItemIcon, {\n                sx: {\n                  minWidth: 0,\n                  mr: open ? 3 : 'auto',\n                  justifyContent: 'center'\n                },\n                children: _jsx(DesignServicesIcon, {})\n              }), _jsx(ListItemText, {\n                primary: \"Setup Wizard\",\n                sx: {\n                  opacity: open ? 1 : 0\n                }\n              })]\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/app/controlcenter/Upgradewizard\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'block'\n            },\n            children: _jsxs(ListItemButton, {\n              sx: {\n                minHeight: 48,\n                justifyContent: open ? 'initial' : 'center',\n                px: 2.5\n              },\n              children: [_jsx(ListItemIcon, {\n                sx: {\n                  minWidth: 0,\n                  mr: open ? 3 : 'auto',\n                  justifyContent: 'center'\n                },\n                children: _jsx(UpgradeIcon, {})\n              }), _jsx(ListItemText, {\n                primary: \"Upgrade Wizard\",\n                sx: {\n                  opacity: open ? 1 : 0\n                }\n              })]\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/app/controlcenter/Backup\",\n          style: {\n            textDecoration: 'none',\n            color: 'black'\n          },\n          children: _jsx(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'block'\n            },\n            children: _jsxs(ListItemButton, {\n              sx: {\n                minHeight: 48,\n                justifyContent: open ? 'initial' : 'center',\n                px: 2.5\n              },\n              children: [_jsx(ListItemIcon, {\n                sx: {\n                  minWidth: 0,\n                  mr: open ? 3 : 'auto',\n                  justifyContent: 'center'\n                },\n                children: _jsx(BackupIcon, {})\n              }), _jsx(ListItemText, {\n                primary: \"BackUp\",\n                sx: {\n                  opacity: open ? 1 : 0\n                }\n              })]\n            })\n          })\n        }), _jsx(Divider, {})]\n      })]\n    }), _jsx(DrawerHeader, {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}