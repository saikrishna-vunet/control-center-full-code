{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport { FormInputMultiCheckbox } from '../form-components/FormMultiCheckbox';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios'; // import { HostsData } from './HostsTable';\n\nimport url_backend from '../configs/url';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst Accordion = styled(props => _jsx(MuiAccordion, Object.assign({\n  disableGutters: true,\n  elevation: 0,\n  square: true\n}, props)))(({\n  theme\n}) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0\n  },\n  '&:before': {\n    display: 'none'\n  }\n}));\nconst AccordionSummary = styled(props => _jsx(MuiAccordionSummary, Object.assign({\n  expandIcon: _jsx(ArrowForwardIosSharpIcon, {\n    sx: {\n      fontSize: '0.9rem'\n    }\n  })\n}, props)))(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, .05)' : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)'\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst AccordionDetails = styled(MuiAccordionDetails)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)'\n}));\nexport const EditHosts = ({\n  data\n}) => {\n  // const temp=data[0].labels;\n  const defaultValues = {\n    labels: []\n  };\n  const methods = useForm({\n    defaultValues: defaultValues\n  });\n  const {\n    handleSubmit,\n    control,\n    setValue\n  } = methods;\n  const [expanded, setExpanded] = React.useState('panel1');\n  const [isShown, setIsShown] = React.useState(false);\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const handleHostConnect = () => {\n    console.log(\" connect to host\");\n  };\n\n  const handleLabelsEdit = () => {\n    console.log(\"edit labels\");\n    setIsShown(true);\n  };\n\n  const onSubmit = async editdata => {\n    data[0].labels = editdata.labels;\n    const temp = JSON.stringify(data[0]);\n    console.log(temp);\n    setIsShown(false);\n    const request_url = url_backend + '/api/hosts/';\n\n    try {\n      // make axios put request\n      const response = await axios({\n        method: \"put\",\n        url: request_url,\n        data: temp,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return _jsx(_Fragment, {\n    children: data.map((row, index) => _jsxs(\"div\", {\n      children: [_jsxs(Typography, {\n        sx: {\n          flex: '1 1 100%'\n        },\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: [\"Hosts \", '>>', \" \", row.name]\n      }), _jsx(\"span\", {\n        style: {\n          marginLeft: '.5rem'\n        }\n      }), _jsxs(Accordion, {\n        expanded: expanded === 'panel1',\n        onChange: handleChange('panel1'),\n        children: [_jsx(AccordionSummary, {\n          \"aria-controls\": \"panel1d-content\",\n          id: \"panel1d-header\",\n          children: _jsx(Typography, {\n            children: \"Basic Information\"\n          })\n        }), _jsx(AccordionDetails, {\n          children: _jsx(Paper, {\n            children: _jsx(Table, {\n              children: _jsxs(TableHead, {\n                children: [_jsxs(TableRow, {\n                  children: [_jsx(TableCell, {\n                    children: \"OS\"\n                  }), _jsx(TableCell, {\n                    align: \"right\",\n                    children: row.OS\n                  })]\n                }), _jsxs(TableRow, {\n                  children: [_jsx(TableCell, {\n                    children: \"Processors\"\n                  }), _jsx(TableCell, {\n                    align: \"right\",\n                    children: row.processor_type\n                  })]\n                }), _jsxs(TableRow, {\n                  children: [_jsx(TableCell, {\n                    children: \"Memory\"\n                  }), _jsx(TableCell, {\n                    align: \"right\",\n                    children: row.memory\n                  })]\n                }), _jsxs(TableRow, {\n                  children: [_jsx(TableCell, {\n                    children: \"Storage\"\n                  }), _jsx(TableCell, {\n                    align: \"right\",\n                    children: row.total_storage\n                  })]\n                })]\n              })\n            })\n          })\n        })]\n      }), _jsxs(Accordion, {\n        expanded: expanded === 'panel2',\n        onChange: handleChange('panel2'),\n        children: [_jsx(AccordionSummary, {\n          \"aria-controls\": \"panel2d-content\",\n          id: \"panel2d-header\",\n          children: _jsx(Typography, {\n            children: \"Services\"\n          })\n        }), _jsx(AccordionDetails, {\n          children: _jsx(Paper, {\n            children: _jsxs(Table, {\n              children: [_jsx(TableHead, {\n                children: _jsxs(TableRow, {\n                  children: [_jsx(TableCell, {\n                    children: \"Services assigned\"\n                  }), _jsx(TableCell, {\n                    align: \"right\",\n                    children: \"# of instances running\"\n                  })]\n                })\n              }), _jsx(TableBody, {\n                children: row.services.map(row => _jsxs(TableRow, {\n                  children: [_jsx(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.Name\n                  }), _jsx(TableCell, {\n                    align: \"right\",\n                    children: row.Instances\n                  })]\n                }, row.Name))\n              })]\n            })\n          })\n        })]\n      }), _jsxs(Accordion, {\n        expanded: expanded === 'panel3',\n        onChange: handleChange('panel3'),\n        children: [_jsx(AccordionSummary, {\n          \"aria-controls\": \"panel3d-content\",\n          id: \"panel3d-header\",\n          children: _jsx(Typography, {\n            children: \"Labels\"\n          })\n        }), _jsx(AccordionDetails, {\n          children: _jsxs(Box, {\n            component: \"span\",\n            m: 1,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [_jsx(Typography, {\n              children: row.labels.map(row => _jsx(TableRow, {\n                children: _jsx(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row\n                })\n              }, row))\n            }), isShown && _jsx(FormInputMultiCheckbox, {\n              control: control,\n              setValue: setValue,\n              name: \"labels\",\n              label: \"Labels\",\n              list: row.labels\n            }), isShown ? _jsx(Button, {\n              variant: \"contained\",\n              onClick: handleSubmit(onSubmit),\n              size: \"small\",\n              children: \"Save\"\n            }) : _jsx(Button, {\n              variant: \"contained\",\n              onClick: handleLabelsEdit,\n              size: \"small\",\n              children: \"Edit\"\n            })]\n          })\n        })]\n      }), _jsxs(Accordion, {\n        expanded: expanded === 'panel4',\n        onChange: handleChange('panel4'),\n        children: [_jsx(AccordionSummary, {\n          \"aria-controls\": \"panel4d-content\",\n          id: \"panel4d-header\",\n          children: _jsx(Typography, {\n            children: \"Health\"\n          })\n        }), _jsx(AccordionDetails, {\n          children: _jsx(Typography, {\n            children: row.health_status\n          })\n        })]\n      }), _jsxs(Accordion, {\n        expanded: expanded === 'panel5',\n        onChange: handleChange('panel5'),\n        children: [_jsx(AccordionSummary, {\n          \"aria-controls\": \"panel5d-content\",\n          id: \"panel5d-header\",\n          children: _jsx(Typography, {\n            children: \"Connect\"\n          })\n        }), _jsxs(AccordionDetails, {\n          children: [_jsx(Typography, {\n            children: \"Expanding this provides a button to initiate SSH Connection to the host through the browser\"\n          }), _jsx(Button, {\n            variant: \"contained\",\n            onClick: handleHostConnect,\n            children: \"Connect to Host\"\n          })]\n        })]\n      })]\n    }))\n  });\n};","map":null,"metadata":{},"sourceType":"module"}