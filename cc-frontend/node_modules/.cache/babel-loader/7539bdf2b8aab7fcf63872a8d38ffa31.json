{"ast":null,"code":"import { Paper, Typography } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { FormInputText } from \"../form-components/FormInputText\";\nimport { FormInputMultiCheckbox } from \"../form-components/FormMultiCheckbox\";\nimport { FormInputRadio } from \"../form-components/FormInputRadio\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from 'axios';\nimport url_backend from \"../configs/url\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst defaultValues = {\n  name: \"\",\n  description: \"\",\n  Ipaddress: \"\",\n  host_type: \"\",\n  labels: [],\n  OS: \"\",\n  number_of_cores: 0,\n  processor_type: \"\",\n  memory: \"\",\n  total_storage: \"\",\n  storage: \"\",\n  mount_point: \"\"\n};\nconst options = [{\n  label: \"Web\",\n  value: \"Web\"\n}, {\n  label: \"App\",\n  value: \"App\"\n}, {\n  label: \"DB\",\n  value: \"DB\"\n}, {\n  label: \"Common\",\n  value: \"Common\"\n}];\nexport const AddHosts = () => {\n  const methods = useForm({\n    defaultValues: defaultValues\n  });\n  const {\n    handleSubmit,\n    reset,\n    control,\n    setValue,\n    watch\n  } = methods;\n  const request_url = url_backend + '/api/hosts/';\n\n  const onSubmit = async data => {\n    console.log(JSON.stringify(data));\n\n    try {\n      // make axios post request\n      const response = await axios({\n        method: \"post\",\n        url: request_url,\n        data: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n\n    alert(\"Host is successfully addded\");\n    window.location.reload();\n  };\n\n  return _jsxs(Paper, {\n    style: {\n      display: \"grid\",\n      gridRowGap: \"20px\",\n      padding: \"20px\",\n      margin: \"10px 300px\"\n    },\n    elevation: 3,\n    children: [_jsx(Typography, {\n      variant: \"h6\",\n      children: \"Add Host\"\n    }), _jsx(FormInputText, {\n      name: \"name\",\n      control: control,\n      label: \"Name of the host\"\n    }), _jsx(FormInputText, {\n      name: \"description\",\n      control: control,\n      label: \"Description of the host\"\n    }), _jsx(FormInputText, {\n      name: \"Ipaddress\",\n      control: control,\n      label: \"IP Address\"\n    }), _jsx(FormInputText, {\n      name: \"OS\",\n      control: control,\n      label: \"Host OS\"\n    }), _jsx(FormInputRadio, {\n      name: \"host_type\",\n      control: control,\n      label: \"Type of host\",\n      options: options\n    }), _jsx(FormInputMultiCheckbox, {\n      control: control,\n      setValue: setValue,\n      name: \"labels\",\n      label: \"Labels\"\n    }), _jsxs(Box, {\n      component: \"span\",\n      m: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [_jsx(FormInputText, {\n        name: \"number_of_cores\",\n        control: control,\n        label: \"Number of cores\"\n      }), _jsx(FormInputText, {\n        name: \"memory\",\n        control: control,\n        label: \"Memory\"\n      })]\n    }), _jsxs(Box, {\n      component: \"span\",\n      m: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [_jsx(FormInputText, {\n        name: \"processor_type\",\n        control: control,\n        label: \"Type of Processor\"\n      }), _jsx(FormInputText, {\n        name: \"total_storage\",\n        control: control,\n        label: \"Total storage\"\n      })]\n    }), _jsxs(Box, {\n      component: \"span\",\n      m: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [_jsx(FormInputText, {\n        name: \"storage\",\n        control: control,\n        label: \"Mount point storage\"\n      }), _jsx(FormInputText, {\n        name: \"mount_point\",\n        control: control,\n        label: \"Mount point\"\n      })]\n    }), _jsxs(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      display: \"flex\",\n      children: [_jsx(Button, {\n        onClick: handleSubmit(onSubmit),\n        variant: \"contained\",\n        children: \"Submit\"\n      }), _jsx(Button, {\n        onClick: () => reset(),\n        variant: \"contained\",\n        children: \"Reset\"\n      })]\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}