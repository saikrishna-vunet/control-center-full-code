{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/vunet/apps/control-center/src/pages /HostsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { visuallyHidden } from '@mui/utils';\nimport SearchBar from \"material-ui-search-bar\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\nimport { useNavigate } from 'react-router-dom'; // export enum HealthStatus {\n//     Healthy = \"Healthy\",\n//     NotAvailable = \"Not Available\",\n// }\n// export interface HostsData {\n//   _id:               string;\n//   name:              string;\n//   description:       string;\n//   OS:                string;\n//   Running_services:  number;\n//   Running_instances: number;\n//   health_status:     HealthStatus;\n//   services:          Service[];\n// }\n// export interface Service {\n//   Name:      string;\n//   Instances: number;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: false,\n  label: 'Name'\n}, {\n  id: 'Running_services',\n  numeric: true,\n  disablePadding: false,\n  label: '# of services,containers'\n}, {\n  id: 'services',\n  numeric: false,\n  disablePadding: false,\n  label: 'Services'\n}, {\n  id: 'health_status',\n  numeric: false,\n  disablePadding: false,\n  label: 'Health Status'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return _jsxDEV(TableHead, {\n    children: _jsxDEV(TableRow, {\n      children: [_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: _jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all hosts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), headCells.map(headCell => headCell.id != 'services' ? _jsxDEV(TableCell, {\n        align: \"left\" //{headCell.numeric ? 'right' : 'left'}\n        ,\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: _jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? _jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : _jsxDEV(TableCell, {\n        align: \"left\" //{headCell.numeric ? 'right' : 'left'}\n        ,\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        children: headCell.label\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this)), _jsxDEV(TableCell, {\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nconst EnhancedTableToolbar = props => {\n  const {\n    numSelected\n  } = props;\n  return _jsxDEV(Toolbar, {\n    sx: Object.assign({\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      }\n    }, numSelected > 0 && {\n      bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n    }),\n    children: [numSelected > 0 ? _jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this) : _jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Hosts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), numSelected > 0 ? _jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: _jsxDEV(IconButton, {\n        children: _jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this) : _jsxDEV(Tooltip, {\n      title: \"Add Host\",\n      children: _jsxDEV(IconButton, {\n        children: _jsxDEV(AddCircleOutlineRoundedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = EnhancedTableToolbar;\nexport const HostsTable = ({\n  data\n}) => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const routeChange = name => {\n    const path = `/app/controlcenter/HostsInfo`;\n    navigate(path, {\n      state: {\n        id: name\n      }\n    });\n  };\n\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [order, setOrder] = React.useState('asc');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [searched, setSearched] = React.useState(\"\");\n  const [rows1, setRows1] = React.useState(data);\n  const [numsSelected, setNums] = React.useState(0);\n  React.useEffect(() => {\n    setRows1(data);\n  }, [data]);\n  React.useEffect(() => {\n    setNums(selected.length);\n  });\n\n  const requestSearch = searchedVal => {\n    const filteredRows = data.filter(row => {\n      return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n    });\n    setRows1(filteredRows);\n  };\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(searched);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows1.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleHostsView = (event, name) => {\n    console.log(name + \"View\");\n    event.preventDefault();\n    event.stopPropagation();\n    routeChange(name);\n  };\n\n  const handleHostsEdit = (event, name) => {\n    console.log(name + \"Edit\");\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const getServices = row => {\n    let str = \"\";\n\n    for (let i = 0; i < row.length; i++) {\n      str = str + row[i].Name + '(' + JSON.stringify(row[i].Instances) + ')';\n      if (i !== row.length - 1) str = str + ',';\n    }\n\n    return str;\n  };\n\n  return _jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: _jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: [_jsxDEV(Toolbar, {\n        sx: Object.assign({\n          pl: {\n            sm: 2\n          },\n          pr: {\n            xs: 1,\n            sm: 1\n          }\n        }, numSelected > 0 && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n        }),\n        children: [numSelected > 0 ? _jsxDEV(Typography, {\n          sx: {\n            flex: '1 1 100%'\n          },\n          color: \"inherit\",\n          variant: \"subtitle1\",\n          component: \"div\",\n          children: [numSelected, \" selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }, this) : _jsxDEV(Typography, {\n          sx: {\n            flex: '1 1 100%'\n          },\n          variant: \"h6\",\n          id: \"tableTitle\",\n          component: \"div\",\n          children: \"Hosts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }, this), numSelected > 0 ? _jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: _jsxDEV(IconButton, {\n            children: _jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 9\n        }, this) : _jsxDEV(Tooltip, {\n          title: \"Add Host\",\n          children: _jsxDEV(IconButton, {\n            children: _jsxDEV(AddCircleOutlineRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), _jsxDEV(Paper, {\n        sx: {\n          width: '20%',\n          textAlign: 'center'\n        },\n        children: _jsxDEV(SearchBar, {\n          value: searched,\n          onChange: searchVal => requestSearch(searchVal),\n          onCancelSearch: () => cancelSearch()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        style: {\n          marginLeft: '.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), _jsxDEV(TableContainer, {\n        children: _jsxDEV(Table, {\n          sx: {\n            minWidth: 70\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [_jsxDEV(EnhancedTableHead, {\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows1.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), _jsxDEV(TableBody, {\n            children: [rows1.slice().sort(getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return _jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.name),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected //   sx={{padding:\"checkbox\"}}\n                ,\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: _jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 23\n                }, this), _jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  align: \"left\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 23\n                }, this), _jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: JSON.stringify(row.Running_services) + '/' + JSON.stringify(row.Running_instances)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this), _jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: getServices(row.services)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this), _jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: row.health_status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }, this), _jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: [_jsxDEV(Tooltip, {\n                    title: \"Hosts Detail\",\n                    children: _jsxDEV(IconButton, {\n                      onClick: event => handleHostsView(event, row._id),\n                      children: _jsxDEV(VisibilityIcon, {\n                        sx: {\n                          fontSize: 20\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 25\n                  }, this), _jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    children: _jsxDEV(IconButton, {\n                      onClick: event => handleHostsEdit(event, row._id),\n                      children: _jsxDEV(EditIcon, {\n                        sx: {\n                          fontSize: 20\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 23\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this);\n            }), emptyRows > 0 && _jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: _jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), _jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows1.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HostsTable, \"PEFBheoPNrMnskJVaO3Tf4YqVks=\", false, function () {\n  return [useNavigate];\n});\n\n_c3 = HostsTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"HostsTable\");","map":{"version":3,"names":["React","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","visuallyHidden","SearchBar","VisibilityIcon","EditIcon","AddCircleOutlineRoundedIcon","useNavigate","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","HostsTable","data","navigate","routeChange","name","path","state","setOrderBy","useState","setOrder","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","searched","setSearched","rows1","setRows1","numsSelected","setNums","useEffect","length","requestSearch","searchedVal","filteredRows","filter","row","toLowerCase","includes","cancelSearch","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleHostsView","console","log","preventDefault","stopPropagation","handleHostsEdit","isSelected","emptyRows","Math","max","getServices","str","i","Name","JSON","stringify","Instances","width","mb","textAlign","searchVal","marginLeft","minWidth","isItemSelected","labelId","border","Running_services","Running_instances","services","health_status","_id","fontSize","height"],"sources":["/home/sakthi/vunet/apps/control-center/src/pages /HostsTable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { visuallyHidden } from '@mui/utils';\nimport AssignmentRoundedIcon from '@mui/icons-material/AssignmentRounded';\nimport SearchBar from \"material-ui-search-bar\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\nimport Divider from '@mui/material/Divider';\nimport { HostsInfoLanding } from './HostsViewLanding';\nimport { useNavigate } from 'react-router-dom';\n\n// export enum HealthStatus {\n//     Healthy = \"Healthy\",\n//     NotAvailable = \"Not Available\",\n// }\n\n// export interface HostsData {\n//   _id:               string;\n//   name:              string;\n//   description:       string;\n//   OS:                string;\n//   Running_services:  number;\n//   Running_instances: number;\n//   health_status:     HealthStatus;\n//   services:          Service[];\n// }\n\n// export interface Service {\n//   Name:      string;\n//   Instances: number;\n// }\n\nexport interface HostsData{\n  _id:               string;\n  name:              string;\n  description:       string;\n  OS:                string;\n  Running_services:  number;\n  Running_instances: number;\n  health_status:     string;\n  services:          Service[];\n  labels:            string[];\n  number_of_cores:   number;\n  processor_type:    string;\n  memory:            string;\n  total_storage:     string;\n  storage_mounts:    StorageMount[];\n}\n\nexport interface Service {\n  Name:      string;\n  Instances: number;\n}\n\nexport interface StorageMount {\n  Mount_point: string;\n  Storage:     string;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof HostsData>(\n  order: Order,\n  orderBy: Key,\n): (\n  // a: { [key in Key]: number | string |string[]|Service},\n  // b: { [key in Key]: number | string |string[]|Service},\n  a: HostsData, b: HostsData\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof HostsData;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    label: 'Name',\n  },\n  {\n    id: 'Running_services',\n    numeric: true,\n    disablePadding: false,\n    label: '# of services,containers',\n  },\n  {\n    id: 'services',\n    numeric: false,\n    disablePadding: false,\n    label: 'Services',\n  },\n  {\n    id: 'health_status',\n    numeric: false,\n    disablePadding: false,\n    label: 'Health Status',\n  }\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof HostsData) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof HostsData) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n    \n  return (\n   \n   \n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all hosts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n           headCell.id !='services'?(\n          <TableCell\n            key={headCell.id}\n            align= 'left' //{headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            \n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>):(\n            <TableCell\n            key={headCell.id}\n            align= 'left' //{headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}>\n           {headCell.label}\n           </TableCell>\n          )\n         \n        ))}\n         <TableCell>\n            Actions\n            \n      </TableCell>\n      </TableRow>\n    </TableHead>\n   \n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  const { numSelected } = props;\n  \n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        \n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n         Hosts\n        </Typography>\n        \n      \n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n       \n      ) : (\n       <Tooltip title=\"Add Host\">\n          <IconButton>\n           <AddCircleOutlineRoundedIcon/>\n          </IconButton>\n        </Tooltip>\n        \n      \n      )}\n    </Toolbar>\n  );\n};\n\nexport const HostsTable : React.FC<{data: HostsData[]}> = ({ data }) => {\n\n  const navigate=useNavigate();\n  const routeChange = (name:string) =>{ \n    const path = `/app/controlcenter/HostsInfo`; \n    navigate(path,{state:{id:name}});\n  }\n\n\n  const [orderBy, setOrderBy] = React.useState<keyof HostsData>('name');\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [searched, setSearched] = React.useState<string>(\"\");\n  const [rows1,setRows1]=React.useState<HostsData[]>(data);\n\n  const [numsSelected,setNums]= React.useState(0);\n  \n\n  React.useEffect(() => {\n    setRows1(data);\n}, [data])\n\n  React.useEffect(()=>{\n    setNums(selected.length)\n  })\n  const requestSearch = (searchedVal: string) => {\n      const filteredRows = data.filter((row) => {\n        return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n      });\n      setRows1(filteredRows);\n    };\n  \n    const cancelSearch = () => {\n      setSearched(\"\");\n      requestSearch(searched);\n    };\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof HostsData,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows1.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleHostsView =(event:React.MouseEvent<unknown>,name:string)=>{\n    console.log(name+\"View\");\n    event.preventDefault();\n    event.stopPropagation();\n    routeChange(name);\n  };\n\n  const handleHostsEdit=(event:React.MouseEvent<unknown>,name:string)=>{\n    console.log(name+\"Edit\");\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const getServices=(row:Service[])=>{\n    let str=\"\";\n    for(let i=0;i<row.length;i++){\n      str=str+row[i].Name+'('+JSON.stringify(row[i].Instances)+')';\n      if(i!==row.length-1)\n        str=str+',';\n\n    }\n    return str;\n  }\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        \n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n         Hosts\n        </Typography>\n        \n      \n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n       \n      ) : (\n       <Tooltip title=\"Add Host\">\n          <IconButton>\n           <AddCircleOutlineRoundedIcon/>\n          </IconButton>\n        </Tooltip>\n        \n      \n      )}\n    </Toolbar>\n        {/* <span style={{marginLeft:'.001rem'}}/> */}\n        <Paper sx={{ width:'20%',textAlign:'center'}}>\n        \n\n        <SearchBar\n        value={searched}\n        onChange={(searchVal) => requestSearch(searchVal)}\n        onCancelSearch={() => cancelSearch()}\n      \n        />\n        </Paper>\n        <span style={{marginLeft:'.5rem'}}/>\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 70}}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows1.length}\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n              rows.slice().sort(getComparator(order, orderBy)) */}\n              {rows1.slice().sort(getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    //   sx={{padding:\"checkbox\"}}\n                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                      \n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"left\"\n                      >\n                        {row.name}\n                      </TableCell>\n\n                      <TableCell align=\"left\">{JSON.stringify(row.Running_services)+'/'+JSON.stringify(row.Running_instances)}</TableCell>\n                      <TableCell align=\"left\">{getServices(row.services)}</TableCell>\n                      <TableCell align=\"left\">{row.health_status}</TableCell>\n                      \n                      <TableCell align=\"left\">\n\n                        <Tooltip title=\"Hosts Detail\">\n                          <IconButton\n                          onClick={(event) => handleHostsView(event, row._id)}\n                          >\n                            <VisibilityIcon sx={{ fontSize: 20 }}/>\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Edit\">\n                          <IconButton \n                          onClick={(event) => handleHostsEdit(event, row._id)}\n                          >\n                            <EditIcon sx={{ fontSize: 20 }}/>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows1.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      \n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}