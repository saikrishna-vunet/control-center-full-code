{"ast":null,"code":"import Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { IconButton, List, Stack, Table, TableCell, TableRow, ListItem, ListItemText } from '@mui/material';\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\nimport HealthAndSafetyIcon from '@mui/icons-material/HealthAndSafety';\nimport axios from 'axios';\nimport url_backend from '../configs/url';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nexport function SettingsCard() {\n  const [data, setData] = React.useState([]);\n\n  const getProductData = async () => {\n    const url = url_backend + '/api/settings/';\n\n    try {\n      const data = await axios.get(url);\n      setData(data.data);\n      console.log('Data:' + {\n        data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getProductData();\n  }, []);\n  return _jsx(_Fragment, {\n    children: data.map(row => _jsxs(Card, {\n      sx: {\n        maxWidth: 350,\n        boxShadow: 3,\n        m: 1\n      },\n      children: [_jsx(CardContent, {\n        children: _jsxs(Table, {\n          children: [_jsxs(TableRow, {\n            children: [_jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.hosts\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.expected_instances\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.enabled_services\n            })]\n          }), _jsxs(TableRow, {\n            children: [_jsx(TableCell, {\n              children: \"Hosts\"\n            }), _jsx(TableCell, {\n              children: \"Expected Instances\"\n            }), _jsx(TableCell, {\n              children: \"Enabled Services\"\n            })]\n          })]\n        })\n      }), _jsx(CardActions, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: _jsx(Button, {\n          size: \"small\",\n          children: \"View Details\"\n        })\n      })]\n    }))\n  });\n}\nexport function VersionInfoCard() {\n  const [data, setData] = React.useState([]);\n\n  const getProductData = async () => {\n    const url = url_backend + '/api/version_info/';\n\n    try {\n      const data = await axios.get(url);\n      setData(data.data);\n      console.log('Data:' + {\n        data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getProductData();\n  }, []);\n  return _jsx(_Fragment, {\n    children: data.map(row => _jsxs(Card, {\n      sx: {\n        maxWidth: 350,\n        boxShadow: 3,\n        m: 1\n      },\n      children: [_jsx(CardContent, {\n        children: _jsxs(Table, {\n          children: [_jsxs(TableRow, {\n            children: [_jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.platform_version\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.cc_version\n            }), _jsx(TableCell, {\n              children: row.Last_upgrade_time\n            })]\n          }), _jsxs(TableRow, {\n            children: [_jsx(TableCell, {\n              children: \"vsmaps version\"\n            }), _jsx(TableCell, {\n              children: \"cc version\"\n            }), _jsx(TableCell, {\n              children: \"Last Upgrade\"\n            })]\n          })]\n        })\n      }), _jsx(CardActions, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: _jsx(Button, {\n          size: \"small\",\n          children: \"Upgrade\"\n        })\n      })]\n    }))\n  });\n}\nexport function StatusCard() {\n  const [data, setData] = React.useState([]);\n\n  const getProductData = async () => {\n    const url = url_backend + '/api/status/';\n\n    try {\n      const data = await axios.get(url);\n      setData(data.data);\n      console.log('Data:' + {\n        data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getProductData();\n  }, []);\n  return _jsx(_Fragment, {\n    children: data.map(row => _jsxs(Card, {\n      sx: {\n        boxShadow: 3,\n        m: 1\n      },\n      children: [_jsx(CardContent, {\n        children: _jsxs(Table, {\n          children: [_jsxs(TableRow, {\n            sx: {},\n            children: [_jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.healthy_hosts\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.instances_running\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.services_running\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.unhealthy_hosts.length\n            }), _jsx(TableCell, {\n              sx: {\n                fontSize: 40\n              },\n              children: row.unhealthy_services.length\n            })]\n          }), _jsxs(TableRow, {\n            children: [_jsx(TableCell, {\n              children: \" Healthy Hosts\"\n            }), _jsx(TableCell, {\n              children: \"Running Instances\"\n            }), _jsx(TableCell, {\n              children: \"Running Services\"\n            }), _jsx(TableCell, {\n              children: \"Unhealthy Hosts\"\n            }), _jsx(TableCell, {\n              children: \"Unhealthy Services\"\n            })]\n          })]\n        })\n      }), _jsx(CardActions, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: _jsx(Button, {\n          size: \"small\",\n          children: \"View Details\"\n        })\n      })]\n    }))\n  });\n}\nexport function NotificationsCard() {\n  return _jsx(Card, {\n    sx: {\n      width: 500,\n      boxShadow: 3,\n      m: 1\n    },\n    children: _jsxs(CardContent, {\n      children: [_jsxs(Stack, {\n        direction: \"row\",\n        children: [_jsx(IconButton, {\n          children: _jsx(NotificationsActiveIcon, {})\n        }), _jsx(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: \"Important Notifications\"\n        })]\n      }), _jsx(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: _jsxs(List, {\n          children: [_jsx(ListItem, {\n            children: _jsx(ListItemText, {\n              children: \"License expiring in 3 Weeks\"\n            })\n          }), _jsx(ListItem, {\n            children: _jsx(ListItemText, {\n              children: \"Service XXX having frequent restarts\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\nexport function HealthCard() {\n  return _jsxs(Card, {\n    sx: {\n      width: 680,\n      boxShadow: 3,\n      m: 1\n    },\n    children: [_jsxs(CardContent, {\n      children: [_jsxs(Stack, {\n        direction: \"row\",\n        children: [_jsx(IconButton, {\n          children: _jsx(HealthAndSafetyIcon, {})\n        }), _jsx(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: \"System Health Check\"\n        })]\n      }), _jsx(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"System HEalth Summary appears here\"\n      })]\n    }), _jsx(CardActions, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      children: _jsx(Button, {\n        size: \"small\",\n        children: \"Dashboards\"\n      })\n    })]\n  });\n}\nexport const Home = () => {\n  return _jsxs(Box, {\n    component: \"main\",\n    sx: {\n      flexGrow: 0,\n      p: 3,\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    children: [_jsx(Toolbar, {}), _jsxs(Stack, {\n      direction: \"column\",\n      children: [_jsxs(Stack, {\n        direction: \"row\",\n        children: [_jsx(SettingsCard, {}), _jsx(StatusCard, {}), _jsx(VersionInfoCard, {})]\n      }), _jsxs(Stack, {\n        direction: \"row\",\n        children: [_jsx(NotificationsCard, {}), _jsx(HealthCard, {})]\n      })]\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}