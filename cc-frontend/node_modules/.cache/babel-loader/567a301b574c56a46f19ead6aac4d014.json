{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/vunet/apps/control-center/src/pages /Hosts.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst data = [{\n  name: \"Robert1\",\n  type: 23,\n  instances: \"Male\",\n  nodes: \"Full Stack(React + Java) Developer\",\n  nodelist: \"2,3\"\n}, {\n  name: \"Robert2\",\n  type: 23,\n  instances: \"Male\",\n  nodes: \"Full Stack(React + Java) Developer\",\n  nodelist: \"2,3\"\n}, {\n  name: \"Robert3\",\n  type: 23,\n  instances: \"Male\",\n  nodes: \"Full Stack(React + Java) Developer\",\n  nodelist: \"2,3\"\n}, {\n  name: \"Robert4\",\n  type: 23,\n  instances: \"Male\",\n  nodes: \"Full Stack(React + Java) Developer\",\n  nodelist: \"2,3\"\n}];\nexport const Hosts = () => {\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(\"h1\", {\n      children: \" I am centered \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), _jsxDEV(\"table\", {\n      children: [_jsxDEV(\"thead\", {\n        children: _jsxDEV(\"tr\", {\n          children: [_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), _jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), _jsxDEV(\"th\", {\n            children: \"Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), _jsxDEV(\"th\", {\n            children: \"Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), _jsxDEV(\"th\", {\n            children: \"Node List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), _jsxDEV(\"tbody\", {\n        children: data.map((value, key) => {\n          return _jsxDEV(\"tr\", {\n            children: [_jsxDEV(\"td\", {\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this), _jsxDEV(\"td\", {\n              children: value.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), _jsxDEV(\"td\", {\n              children: value.instances\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), _jsxDEV(\"td\", {\n              children: value.nodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), _jsxDEV(\"td\", {\n              children: value.nodelist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Hosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hosts\");","map":{"version":3,"names":["React","data","name","type","instances","nodes","nodelist","Hosts","map","value","key"],"sources":["/home/sakthi/vunet/apps/control-center/src/pages /Hosts.tsx"],"sourcesContent":["import React from \"react\";\n\n\nconst data = [\n  { name: \"Robert1\", type: 23, instances: \"Male\", nodes: \"Full Stack(React + Java) Developer\",nodelist:\"2,3\" },\n  { name: \"Robert2\", type: 23, instances: \"Male\", nodes: \"Full Stack(React + Java) Developer\",nodelist:\"2,3\" },\n  { name: \"Robert3\", type: 23, instances: \"Male\", nodes: \"Full Stack(React + Java) Developer\",nodelist:\"2,3\" },\n  { name: \"Robert4\", type: 23, instances: \"Male\", nodes: \"Full Stack(React + Java) Developer\",nodelist:\"2,3\" }\n]\n\nexport const Hosts=()=>{\n  return (\n    <div>\n    <h1> I am centered </h1>\n    <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Instances</th>\n            <th>Nodes</th>\n            <th>Node List</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((value, key) => {\n              return (\n                <tr key={key}>\n                  <td>{value.name}</td>\n                  <td>{value.type}</td>\n                  <td>{value.instances}</td>\n                  <td>{value.nodes}</td>\n                  <td>{value.nodelist}</td>\n                </tr>\n              )\n            })\n          }\n        </tbody>\n      </table>\n</div>\n     \n  );\n};\n  "],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAI,GAAG,CACX;EAAEC,IAAI,EAAE,SAAR;EAAmBC,IAAI,EAAE,EAAzB;EAA6BC,SAAS,EAAE,MAAxC;EAAgDC,KAAK,EAAE,oCAAvD;EAA4FC,QAAQ,EAAC;AAArG,CADW,EAEX;EAAEJ,IAAI,EAAE,SAAR;EAAmBC,IAAI,EAAE,EAAzB;EAA6BC,SAAS,EAAE,MAAxC;EAAgDC,KAAK,EAAE,oCAAvD;EAA4FC,QAAQ,EAAC;AAArG,CAFW,EAGX;EAAEJ,IAAI,EAAE,SAAR;EAAmBC,IAAI,EAAE,EAAzB;EAA6BC,SAAS,EAAE,MAAxC;EAAgDC,KAAK,EAAE,oCAAvD;EAA4FC,QAAQ,EAAC;AAArG,CAHW,EAIX;EAAEJ,IAAI,EAAE,SAAR;EAAmBC,IAAI,EAAE,EAAzB;EAA6BC,SAAS,EAAE,MAAxC;EAAgDC,KAAK,EAAE,oCAAvD;EAA4FC,QAAQ,EAAC;AAArG,CAJW,CAAb;AAOA,OAAO,MAAMC,KAAK,GAAC,MAAI;EACrB,OACE;IAAA,WACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,EAEA;MAAA,WACI;QAAA,UACE;UAAA,WACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,EAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,EAIE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,EAKE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADJ,EAUI;QAAA,UAEIN,IAAI,CAACO,GAAL,CAAS,CAACC,KAAD,EAAQC,GAAR,KAAgB;UACvB,OACE;YAAA,WACE;cAAA,UAAKD,KAAK,CAACP;YAAX;cAAA;cAAA;cAAA;YAAA,QADF,EAEE;cAAA,UAAKO,KAAK,CAACN;YAAX;cAAA;cAAA;cAAA;YAAA,QAFF,EAGE;cAAA,UAAKM,KAAK,CAACL;YAAX;cAAA;cAAA;cAAA;YAAA,QAHF,EAIE;cAAA,UAAKK,KAAK,CAACJ;YAAX;cAAA;cAAA;cAAA;YAAA,QAJF,EAKE;cAAA,UAAKI,KAAK,CAACH;YAAX;cAAA;cAAA;cAAA;YAAA,QALF;UAAA,GAASI,GAAT;YAAA;YAAA;YAAA;UAAA,QADF;QASD,CAVD;MAFJ;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAjCM;KAAMH,K"},"metadata":{},"sourceType":"module"}